// Components
import { CardBlogCarousel } from "@/components/CardBlogCarousel/CardBlog";
import CardPost from "@/components/CardPost/CardPost";
import { Post } from "@/interfaces";
import { useServiceMutation, useServiceQuery } from "@/Utilities/Services";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";

// Utilities
import { NextPage } from "next";
import { TextInput } from "@/components/InputText/InputText";
import { useState } from "react";
import { useToast } from "@chakra-ui/react";
import { emailRegex } from "@/Utilities/Variables";

// Interfaces
interface BlogProps {
  blogDataDicas: Post[];
  blogDataItalia: Post[];
  blogDataPortugal: Post[];
  blogData: Post[];
}

const Blog: NextPage<BlogProps> = ({
  blogData,
  blogDataDicas,
  blogDataItalia,
  blogDataPortugal,
}) => {
  const [subscribeValue, setSubscribeValue] = useState("");
  const { subscribeEmail, loading } = useServiceMutation();
  const toast = useToast();

  async function handleSubscribeSubmit(event: React.FormEvent) {
    event.preventDefault();
    if (subscribeValue !== "" && emailRegex.test(subscribeValue)) {
      await subscribeEmail(subscribeValue);
      setSubscribeValue("");
    } else {
      toast({
        title: "Erro",
        position: "top",
        description: "Preencha o campo de e-mail.",
        status: "info",
        duration: 3000,
        isClosable: true,
      });
    }
  }

  function handleSubscribeChange(event: React.ChangeEvent<HTMLInputElement>) {
    setSubscribeValue(event.target.value);
  }
  return (
    <>
      <Head>
        <title>Lorem Ipsum</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="w-full min-h-screen py-0">
        <section className=" text-center lg:text-start items-center bg-blog bg-cover pt-16 lg:pt-0 lg:mt-28">
          <div className="container grid grid-cols-1 lg:grid-cols-2 lg:gap-x-11">
            <div className="py-7 lg:py-16 flex flex-col">
              <div className=" flex flex-col lg:flex-row items-center lg:items-end gap-5">
                <h1 className="mt-4 text-3xl font-medium  lg:text-5xl text-green-500 flex gap-4 order-2 lg:order-1">
                  Lorem Ipsum
                </h1>
                <Image
                  src="/Home/bandeiras.webp"
                  alt="Bandeiras de portugal e italia"
                  width={75}
                  height={35}
                  className="mx-auto lg:ml-0 order-1 lg:order-2"
                  priority
                />
              </div>
              <p className="mx-auto mt-4 lg:mt-6 text-green-300 text-sm lg:text-xl max-w-md lg:ml-0  lg:leading-6">
                Lorem ipsum dolor sit amet, consectetur adipiscing elit.
              </p>
            </div>
            <Image
              src="/Blog/banner.webp"
              alt="Imagem banner principal"
              width={352}
              height={283}
              className="self-end mx-auto mt-5"
              priority
            />
          </div>
        </section>
        <section className="container my-11">
          <h2 className="font-medium text-black-400 text-2xl lg:text-4xl text-center lg:text-start my-9 ">
            Lorem Ipsum
          </h2>

          <div className=" grid gap-y-9  grid-cols-1 lg:grid-cols-5  lg:gap-y-0 lg:gap-x-2">
            <div className=" lg:col-span-3">
              <CardPost
                type="primary"
                category={blogData[0].postType}
                blogData={blogData[0]}
              />
            </div>
            <div className=" flex flex-col gap-5 lg:col-span-2">
              <CardPost type="variante" blogData={blogData[1]} />
              <CardPost type="variante" blogData={blogData[2]} />
              <CardPost type="variante" blogData={blogData[3]} />
            </div>
          </div>
        </section>
        <section className="container">
          <div className="container my-10 text-center text-gray-500 bg-white-400 lg:bg-subscribeLg bg-cover py-14 lg:my-20">
            <span className="mt-7 text-green-500 font-medium">Lorem Ipsum</span>
            <h2 className="mt-2 text-2xl sm:text-4xl text-black-400 font-medium">
              Lorem ipsum dolor sit amet
            </h2>
            <p className="text-sm sm:text-base mt-4 text-gray-300">
              Lorem ipsum dolor sit amet, consectetur adipiscing elit.
            </p>

            <form
              onSubmit={handleSubscribeSubmit}
              className="flex flex-col items-center lg:items-baseline gap-5  mt-8 justify-center max-w-md mx-auto lg:flex-row"
            >
              <div className="w-64">
                <TextInput.Root>
                  <TextInput.Input
                    type="email"
                    value={subscribeValue}
                    placeholder="Digite o seu melhor E-mail"
                    onChange={handleSubscribeChange}
                  />
                </TextInput.Root>
              </div>

              <button
                type="submit"
                className="linkButton text-sm lg:text-base mt-4"
                disabled={loading}
              >
                Cadastrar
              </button>
            </form>
          </div>
        </section>
        <section className="my-8">
          <div className="flex flex-col container items-center lg:items-stretch">
            <div className="text-center lg:text-start flex items-center">
              <div className="max-w-3xl mx-auto mb-14 lg:ml-0">
                <span className=" text-green-500 font-medium">
                  Lorem Ipsum
                </span>
                <h2 className="mt-2 text-2xl sm:text-4xl text-black-400 font-medium">
                  Lorem ipsum dolor sit amet
                </h2>
              </div>
              <Link
                href="/blog/dicas"
                className="hidden lg:block button ml-auto"
              >
                Lorem Ipsum
              </Link>
            </div>
            <div className="container lg:px-0">
              <CardBlogCarousel blogData={blogDataDicas} />
            </div>

            <Link href="/blog/dicas" className="lg:hidden button mt-5 ">
              Lorem Ipsum
            </Link>
          </div>
        </section>
        <section className="lg:container">
          <div className="text-center lg:text-start container grid grid-cols-1 lg:grid-cols-5 items-center lg:gap-16 lg:my-16 box-banner">
            <div className="col-span-3 px-10 py-10 flex flex-col">
              <span className=" mt-16 lg:mt-8 text-green-500 font-medium">
                Lorem Ipsum
              </span>
              <h2 className="mt-2 text-2xl sm:text-4xl text-black-400 font-medium lg:leading-9">
                Lorem ipsum dolor sit amet
              </h2>
              <p className="text-sm sm:text-base mt-4 text-gray-300">
                Lorem ipsum dolor sit amet, consectetur adipiscing elit.
              </p>
              <Link
                href="/"
                className="text-sm sm:text-base linkButton self-center lg:self-start my-4"
              >
                Lorem Ipsum
              </Link>
            </div>
            <Image
              src="/banner-woman.webp"
              alt="imagem de uma mulher sorrindo"
              width={345}
              height={362}
              className=" mx-auto col-span-2"
            />
          </div>
        </section>
        <section className="my-8">
          <div className="flex flex-col container items-center lg:items-stretch">
            <div className="text-center lg:text-start flex items-center">
              <div className="max-w-3xl mx-auto mb-14 lg:ml-0">
                <span className=" text-green-500 font-medium">Lorem Ipsum</span>
                <h2 className="mt-2 text-2xl sm:text-4xl text-black-400 font-medium">
                  Lorem ipsum dolor sit amet
                </h2>
              </div>
              <Link
                href="/blog/portugal"
                className="hidden lg:block button ml-auto"
              >
                Lorem Ipsum
              </Link>
            </div>
            <div className="container lg:px-0">
              <CardBlogCarousel blogData={blogDataPortugal} />
            </div>

            <Link href="/blog/portugal" className="lg:hidden button mt-5 ">
              Lorem Ipsum
            </Link>
          </div>
        </section>
        <section className="my-8">
          <div className="flex flex-col container items-center lg:items-stretch">
            <div className="text-center lg:text-start flex items-center">
              <div className="max-w-3xl mx-auto mb-14 lg:ml-0">
                <span className=" text-green-500 font-medium">Lorem Ipsum</span>
                <h2 className="mt-2 text-2xl sm:text-4xl text-black-400 font-medium">
                  Lorem ipsum dolor sit amet
                </h2>
              </div>
              <Link
                href="/blog/italia"
                className="hidden lg:block button ml-auto"
              >
                Lorem Ipsum
              </Link>
            </div>
            <div className="container lg:px-0">
              <CardBlogCarousel blogData={blogDataItalia} />
            </div>

            <Link href="/blog/italia" className="lg:hidden button mt-5 ">
              Lorem Ipsum
            </Link>
          </div>
        </section>
      </main>
    </>
  );
};

export default Blog;

export async function getStaticProps() {
  const { getFourPostsByType, getFirstFourPostsByCreate } =
    await useServiceQuery();

  const [
    blogData,
    postTypeResponseDicas,
    postTypeResponseItalia,
    postTypeResponsePortugal,
  ] = await Promise.all([
    getFirstFourPostsByCreate(),
    getFourPostsByType("dicas"),
    getFourPostsByType("italia"),
    getFourPostsByType("portugal"),
  ]);
  if (!blogData) {
    return {
      notFound: true,
    };
  }

  return {
    props: {
      blogDataDicas: postTypeResponseDicas,
      blogDataItalia: postTypeResponseItalia,
      blogDataPortugal: postTypeResponsePortugal,
      blogData,
    },
    revalidate: 60 * 60 * 1, // 1 hour
  };
}
